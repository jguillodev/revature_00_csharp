name: $(date:yyyyMMdd)$(rev:.rr) #20191209.00

trigger:
  - master

stages:
  - stage: compile
    jobs:
      - job: aspnet
        pool:
          vmImage: ubuntu-18.04
        steps:
          - script: |
              dotnet build 3_devops/Devops.sln
  - stage: test
    jobs:
      - job: aspnet_test
        pool:
          vmImage: ubuntu-18.04
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: test
              projects: 3_devops/Devops.sln
              arguments: '--collect:"XPlat Code Coverage"'
          - task: PublishCodeCoverageResults@1
              inputs:
                codecoverageTool: cobertura
                summaryFileLocation: '**/coverage.cobertura.xml'
  - stage: analyze
    jobs:
      - job:
        pool:
          vmImage: ubuntu-18.04
          steps:
            - script: dotnet tool install --global dotnet-sonarscanner
            - script: | 
                dotnet sonarscanner begin /k:devoops-jg1 /d:sonar.login=$SONAR_TOKEN /o:jguillodev
                dotnet build 3_devops/Devops.sln
                dotnet test 3_devops/Devops.sln
                dotnet sonarscanner end /d:sonar.login=$SONAR_TOKEN
          env:
            SONAR_LOGIN: $(SONAR_LOGIN) 
  - stage: pack
    jobs:
    - job:
      pool:
      vmImage: ubuntu-18.04
      steps:
        - script: docker image build -f 3_devops/dockerfile -t joshuaguillory/devops:$BUILD_NAME
          env:
            BUILD_NAME: $(Build.DefinitionNAME)
        - script: docker login --username $DOCKER_USER --password $DOCKER_TOKEN
          env:
            DOCKER_TOKEN: $(DOCKER_TOKEN)
            DOCKER_USER: $(DOCKER_USER)
        - script: docker image push joshuaguillory/devops:$(BUILD_NAME)

 